_1ed‍.x([["sumToString",()=>sumToString],["getIncreasingArray",()=>getIncreasingArray],["maxAndMin",()=>maxAndMin],["countArray",()=>countArray]]);/**
 *
 * @param {number} a
 * @param {number} b
 * @returns {string} 'a + b = (a + b)'
 *
 * example: sumToString(3, 4)
 * returns: '3 + 4 = 7'
 * see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals
 */
       function sumToString(a, b) {
    let string = a + ' + ' + b + ' = ' + (a+b)
    // console.log(string);
    return string;
}


/**
 *
 * @param {number} startNumber
 * @param {number} endNumber
 * @returns {number[]}
 *
 * example: getIncreasingArray(3, 7)
 * returns: [ 3, 4, 5, 6, 7 ]
 *
 */
       function getIncreasingArray(startNumber, endNumber) {
    var increasing = [];
    var index = 0;
    var length = endNumber - startNumber + 1;
    while (index < length) {
        increasing.push(startNumber);
        startNumber++;
        index++;
    }
    return increasing;
}

/**
 *
 * @param {number[]} numbers
 * @return {{min: number, max: number}}
 * see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax
 * and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math
 */
       function maxAndMin(numbers) {
    var maxNum = (Math.max(...numbers));
    var minNum = (Math.min(...numbers));
    return {min: minNum, max: maxNum};
}

console.log(maxAndMin([3,3,5,21,3215,335,-151,-45]));

/**
 *
 * @param array - An array of any primitive type
 * @returns {object} Object where the keys are the values that were passed in
 * and the value was the number of times it occurred.
 *
 * example: countArray([3, 6, 3, 2, 2, 3, 'some', 'hello', 'some', [1, 2]])
 * returns: {'2': 2, '3': 3, '6': 1, some: 2, hello: 1, '1,2': 1}
 *
 */
       function countArray(array) {
    var count = {};
    
        for(var i = 0; i < array.length; i++) {
            if (count.hasOwnProperty(array[i])) {
                count[array[i]]++;
            } else {
                count[array[i]] = 1;
            }
        }
        return count;
}
